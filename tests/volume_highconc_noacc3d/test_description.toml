author = "Jed Wing <jed@salk.edu>"
date = "2008-11-07"
description = "A quantitative test of the basic volume-volume reaction types (uni, bi, tri).  Note that the bi-directional pathways are in here twice.  This is so that they can be tested via both the non-trimolecular and trimolecular code pathways.  The latter is accomplished by adding a bogus trimolecular reaction involving the relevant molecules. This test uses no accurate 3D reactions."
keywords = ["reactions"]

[[checks]]
  testType = "CHECK_SUCCESS"

[[checks]]
  dataFile = "V_out.dat"
  haveHeader = true
  means = [500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0, 500.0]
  testType = "COUNT_EQUILIBRIUM"
  tolerances = [25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0]

[[checks]]
  baseTime = 0.0
  dataFile = "rxn_out.dat"
  haveHeader = true
  means = [100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 20000.0, 20000.0, 20000.0, 100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 20000.0, 20000.0, 20000.0]
  minTime = 0.005
  testType = "COUNT_RATES"
  tolerances = [15000.0, 15000.0, 15000.0, 15000.0, 15000.0, 6000.0, 6000.0, 5000.0, 15000.0, 15000.0, 15000.0, 15000.0, 15000.0, 6000.0, 6000.0, 5000.0]

[[checks]]
  dataFile = "V_out.dat"
  haveHeader = true
  testType = "COUNT_CONSTRAINTS"

  [[checks.countConstraints]]
    query = [0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    target = 0

  [[checks.countConstraints]]
    query = [0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    target = 0

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    target = 0

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    target = 0

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    target = 0

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    target = 0

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    target = 0

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    target = 0

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    target = 0

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0]
    target = 0

  [[checks.countConstraints]]
    query = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
    target = 1000

  [[checks.countConstraints]]
    query = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
    target = 1000

  [[checks.countConstraints]]
    query = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
    target = 1000

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
    target = 1000

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
    target = 1000

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
    target = 1000

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
    target = 1000

  [[checks.countConstraints]]
    query = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
    target = 1000

[run]
  commandlineOpts = ["-quiet"]
  mdlfiles = ["test.mdl"]

